{"version":3,"sources":["ListItem.js","AddItem.js","List.js","Lists.js","AddList.js","App.js","index.js"],"names":["ListItem","props","state","color","name","this","item","onClick","handleClick","bind","style","Component","AddItem","newItem","e","preventDefault","divName","idName","className","ref","onSubmit","handleSubmit","id","type","value","uuidv4","require","List","items","map","addItem","Lists","lists","length","listName","AddList","App","s","addList","handleAddList","handleAddItem","ReactDOM","render","document","getElementById"],"mappings":"iMA0BeA,E,kDAtBX,WAAYC,GAAQ,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CAAEC,MAAO,SAFA,E,+CAKnB,c,oBAIF,WACE,IACIC,EADOC,KAAKJ,MAAMK,KACNF,KAEhB,OACC,sBAAMG,QAASF,KAAKG,YAAYC,KAAKJ,MAAOK,MAAO,CAACP,MAAOE,KAAKH,MAAMC,OAAtE,SACG,iCAASC,U,GAjBMO,aCoCRC,E,kDAlCb,aAAe,IAAD,8BACZ,gBACKV,MAAQ,CACXW,QAAQ,IAHE,E,gDAOd,SAAaC,GACTA,EAAEC,mB,oBAMN,WACE,IAAIC,EAAU,MAAQX,KAAKJ,MAAMgB,OACjC,OACE,sBAAKC,UAAU,aAAf,UACA,sCAASb,KAAKJ,MAAMgB,UACpB,uBAAME,IAAI,OAAOC,SAAUf,KAAKgB,aAAaZ,KAAKJ,MAAlD,UACA,sBAAKiB,GAAIN,EAASG,IAAKH,EAAvB,UACE,yCAAmB,uBACnB,uBAAOO,KAAK,OAAOJ,IAAI,UAEvB,uBACA,uBAAOI,KAAK,SAASC,MAAM,WAC3B,iC,GA5Bcb,aCChBc,EAASC,EAAQ,GAiCRC,E,4JA7Bb,WACE,IAAIvB,EAAOC,KAAKJ,MAAMG,KAClBwB,EAAQvB,KAAKJ,MAAM2B,MAEvB,OAAIA,EAEA,sBAAKN,GAAIlB,EAAT,UACE,+BAAKA,EAAL,WACT,6BACUwB,EAAMC,KAAI,SAASvB,GAClB,OACN,6BAAmB,cAAC,EAAD,CAAUA,KAAMA,GAAWmB,MAArCA,UAIL,cAAC,EAAD,CAASR,OAAQb,EAAM0B,QAASzB,KAAKJ,MAAM6B,QAAQrB,KAAKJ,UATtCoB,KActB,sBAAKH,GAAIlB,EAAT,UACE,+BAAKA,EAAL,WACA,cAAC,EAAD,CAASa,OAAQb,EAAM0B,QAASzB,KAAKJ,MAAM6B,QAAQrB,KAAKJ,UAFtCoB,S,GAtBPd,aCHbc,EAASC,EAAQ,GA8BRK,E,4JA1Bb,WAEE,GAA+B,IAA5B1B,KAAKJ,MAAM+B,MAAMC,OAClB,OACE,qBAAKX,GAAG,WAAWJ,UAAU,OAA7B,SACE,iEAMN,IAAIU,EAAQvB,KAAKJ,MAAM2B,MACnBI,EAAQ3B,KAAKJ,MAAM+B,MACnBF,EAAUzB,KAAKJ,MAAM6B,QACzB,OACE,8BACCE,EAAMH,KAAI,SAASK,GAClB,OACE,cAAC,EAAD,CAAM9B,KAAM8B,EAAUN,MAAOA,EAAMM,GAAWJ,QAASA,EAAQrB,KAAKJ,OAAYoB,SAH1EA,S,GAjBId,aCuBLwB,E,kKAtBb,SAAarB,GACTA,EAAEC,mB,oBAKN,WACE,OACE,qBAAKO,GAAG,aAAR,SACA,uBAAMF,SAAUf,KAAKgB,aAAaZ,KAAKJ,MAAvC,UACA,qBAAKiB,GAAG,UAAR,SACA,wEACA,uBAAOC,KAAK,OAAOJ,IAAI,KAAKG,GAAG,eAEzB,uBACN,uBAAOC,KAAK,SAASC,MAAM,yB,GAlBXb,aCmDPyB,G,wDA9Cb,aAAe,IAAD,8BACZ,gBACKlC,MAAQ,CAChB8B,MAAO,GACPJ,MAAO,IAJQ,E,iDAcd,SAAcS,M,2BAYd,SAAcA,M,oBAOd,WACE,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,CAASoB,QAASjC,KAAKkC,cAAc9B,KAAKJ,QAC1C,qBAAKiB,GAAG,WAAWJ,UAAU,OAA7B,SACE,cAAC,EAAD,CAAOc,MAAO3B,KAAKH,MAAM8B,MAAOJ,MAAOvB,KAAKH,MAAM0B,MAAOE,QAASzB,KAAKmC,cAAc/B,KAAKJ,iB,GAxClFM,cCDlB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.09268ece.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ListItem extends Component {\n\n    constructor(props) {\n\tsuper(props);\n\tthis.state = { color: 'black' };\n    }\n\n    handleClick() {\n\t// Implement this function!\n    }\n\n  render() {\n    var item = this.props.item;\n    var name = item.name;\n\n    return (\n\t    <span onClick={this.handleClick.bind(this)} style={{color: this.state.color}}>\n        <strong>{name}</strong>\n      </span>\n    );\n\n  }\n\n}\nexport default ListItem;\n\n","import React, { Component } from 'react';\n\nclass AddItem extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      newItem:{}\n    }\n  }\n\n  handleSubmit(e) {\n      e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n\n      // Implement the rest of this function here!\n  }\n    \n\n  render() {\n    var divName = 'add' + this.props.idName;\n    return (\n      <div className='addItemDiv'>\n      <h4>Add {this.props.idName}</h4>\n      <form ref='form' onSubmit={this.handleSubmit.bind(this)}>\n      <div id={divName} ref={divName}>\n        <label>Name</label><br />\n        <input type='text' ref='id' />\n        </div>\n        <br />\n        <input type='submit' value='Submit' />\n        <br />\n      </form>\n      </div>\n    );\n  }\n\n}\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport ListItem from './ListItem.js';\nimport AddItem from './AddItem.js';\nconst uuidv4 = require('uuid');\n\nclass List extends Component {\n\n  render() {\n    var name = this.props.name;\n    var items = this.props.items;\n\n    if (items) {\n      return (\n        <div id={name} key={uuidv4()}>\n          <h3>{name} List</h3>\n\t<ul>\n          {items.map(function(item) {\n            return (\n\t\t    <li key={uuidv4()}><ListItem item={item} key={uuidv4()} /></li>\n            )\n          })}\n\t</ul>\n          <AddItem idName={name} addItem={this.props.addItem.bind(this)} />\n        </div>\n      )\n    }\n    return (\n      <div id={name} key={uuidv4()}>\n        <h3>{name} List</h3>\n        <AddItem idName={name} addItem={this.props.addItem.bind(this)} />\n      </div>\n    )\n\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport List from './List.js';\nconst uuidv4 = require('uuid');\n\nclass Lists extends Component {\n\n  render() {\n    // If there are no lists, display a relevant message\n    if(this.props.lists.length === 0) {\n      return (\n        <div id=\"listsDiv\" className=\"List\">\n          <h2>Add new lists to get started!</h2>\n        </div>\n      );\n    }\n\n    // Otherwise, for each list, create a div\n    var items = this.props.items;\n    var lists = this.props.lists;\n    var addItem = this.props.addItem;\n    return (\n      <div key={uuidv4()}>\n      {lists.map(function(listName) {\n        return (\n          <List name={listName} items={items[listName]} addItem={addItem.bind(this)} key={uuidv4()} />\n        )\n      })}\n      </div>\n    );\n  }\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\n\nclass AddList extends Component {\n\n\n  handleSubmit(e) {\n      e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n\n      // Implement the rest of this function here!\n  }\n\n  render() {\n    return (\n      <div id=\"addListDiv\">\n      <form onSubmit={this.handleSubmit.bind(this)}>\n      <div id='addList'>\n      <label>What will be on your next list?&nbsp;\n      <input type='text' ref='id' id='newID'></input>\n      </label>\n      </div><br />\n      <input type='submit' value='Create List' />\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default AddList;\n","import React, { Component } from 'react';\nimport Lists from './Lists.js';\nimport AddList from './AddList.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n\tlists: [], // this holds the name of each list\n\titems: {} // this property names of this object are the names of the lists; their values are arrays of the items in each list\n    };\n  }\n\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n  handleAddList(s) {\n      // Implement this function!\n  }\n\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the \n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of \n   * the state, this function  should then re-render this App component.\n   */\n  handleAddItem(s) {\n      // Implement this function!\n  }\n\n  /**\n   * Renders the component.\n   */\n  render() {\n    return (\n      <div className=\"App\">\n        <AddList addList={this.handleAddList.bind(this)} />\n        <div id=\"listsDiv\" className=\"List\">\n          <Lists lists={this.state.lists} items={this.state.items} addItem={this.handleAddItem.bind(this)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}