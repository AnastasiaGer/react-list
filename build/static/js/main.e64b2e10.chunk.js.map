{"version":3,"sources":["ListItem.js","AddItem.js","List.js","Lists.js","AddList.js","App.js","index.js"],"names":["ListItem","props","state","color","this","setState","name","item","onClick","handleClick","bind","style","Component","AddItem","newItem","e","preventDefault","idName","refs","id","value","addItem","divName","className","ref","onSubmit","handleSubmit","type","uuidv4","require","v4","List","items","map","Lists","lists","length","listName","AddList","newList","addList","App","s","updatedItems","concat","push","handleAddList","handleAddItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e64b2e10.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ListItem extends Component {\n\n    constructor(props) {\n\tsuper(props);\n\tthis.state = { color: 'black' };\n    }\n\n    handleClick() {\n      this.setState({\n        color : this.state.color === 'black' ? 'gray' : 'black'\n      });\n    }\n\n  render() {\n    var item = this.props.item;\n    var name = item.name;\n\n    return (\n\t    <span onClick={this.handleClick.bind(this)} style={{color: this.state.color}}>\n        <strong>{name}</strong>\n      </span>\n    );\n\n  }\n\n}\nexport default ListItem;\n\n","import React, { Component } from 'react';\n\nclass AddItem extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      newItem:{}\n    }\n  }\n\n  handleSubmit(e) {\n      e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n      this.setState({\n        name : this.props.idName,\n        newItem : {name : this.refs.id.value}\n      },\n      function() {\n        this.props.addItem(this.state);\n      }\n    );\n    }\n    \n\n  render() {\n    var divName = 'add' + this.props.idName;\n    return (\n      <div className='addItemDiv'>\n      <h4>Add {this.props.idName}</h4>\n      <form ref='form' onSubmit={this.handleSubmit.bind(this)}>\n      <div id={divName} ref={divName}>\n        <label>Name</label><br />\n        <input type='text' ref='id' />\n        </div>\n        <br />\n        <input type='submit' value='Submit' />\n        <br />\n      </form>\n      </div>\n    );\n  }\n\n}\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport ListItem from './ListItem.js';\nimport AddItem from './AddItem.js';\nconst { v4: uuidv4 } = require('uuid');\nclass List extends Component {\n\n  render() {\n    var name = this.props.name;\n    var items = this.props.items;\n\n    if (items) {\n      return (\n        <div id={name} key={uuidv4()}>\n          <h3>{name} List</h3>\n\t<ul>\n          {items.map(function(item) {\n            return (\n\t\t    <li key={uuidv4()}><ListItem item={item} key={uuidv4()} /></li>\n            )\n          })}\n\t</ul>\n          <AddItem idName={name} addItem={this.props.addItem.bind(this)} />\n        </div>\n      )\n    }\n    return (\n      <div id={name} key={uuidv4()}>\n        <h3>{name} List</h3>\n        <AddItem idName={name} addItem={this.props.addItem.bind(this)} />\n      </div>\n    )\n\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport List from './List.js';\nconst { v4: uuidv4 } = require('uuid');\nclass Lists extends Component {\n\n  render() {\n    // If there are no lists, display a relevant message\n    if(this.props.lists.length === 0) {\n      return (\n        <div id=\"listsDiv\" className=\"List\">\n          <h2>Add new lists to get started!</h2>\n        </div>\n      );\n    }\n\n    // Otherwise, for each list, create a div\n    var items = this.props.items;\n    var lists = this.props.lists;\n    var addItem = this.props.addItem;\n    return (\n      <div key={uuidv4()}>\n      {lists.map(function(listName) {\n        return (\n          <List name={listName} items={items[listName]} addItem={addItem.bind(this)} key={uuidv4()} />\n        )\n      })}\n      </div>\n    );\n  }\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\n\nclass AddList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {newList : ''};\n  }\n\n  handleSubmit(e) {\n      e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n      this.setState({\n        newList : this.refs.id.value\n      }, function() {\n        this.props.addList(this.state);\n      });\n    }\n  \n\n  render() {\n    return (\n      <div id=\"addListDiv\">\n      <form onSubmit={this.handleSubmit.bind(this)}>\n      <div id='addList'>\n      <label>What will be on your next list?&nbsp;\n      <input type='text' ref='id' id='newID'></input>\n      </label>\n      </div><br />\n      <input type='submit' value='Create List' />\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default AddList;\n","import React, { Component } from 'react';\nimport Lists from './Lists.js';\nimport AddList from './AddList.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n\tlists: [], // this holds the name of each list\n\titems: {} // this property names of this object are the names of the lists; their values are arrays of the items in each list\n    };\n  }\n\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n  handleAddList(s) {\n    let updatedItems = this.state.items;\n    updatedItems[s.newItem] = [];\n\n    this.setState({\n      lists : this.state.lists.concat(s.newItem),\n      items : updatedItems\n    });\n  }\n\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the \n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of \n   * the state, this function  should then re-render this App component.\n   */\n  handleAddItem(s) {\n    let updatedItems = this.state.items;\n    updatedItems[s.name].push(s.newItem);\n\n    this.setState({\n      items : updatedItems\n    });\n  }\n\n  /**\n   * Renders the component.\n   */\n  render() {\n    return (\n      <div className=\"App\">\n        <AddList addList={this.handleAddList.bind(this)} />\n        <div id=\"listsDiv\" className=\"List\">\n          <Lists lists={this.state.lists} items={this.state.items} addItem={this.handleAddItem.bind(this)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}